<%# был ли оставлен комментарий для ТЕКУЩЕГО commentable или нет %>
<%# comment: @comment, локальная переменная - comment %>
<% is_current_comment = comment&.for?(commentable) %>
<%# ссылка на id c кнопкой. Устанавливаем далее привязку между кнопкой и блоком tag.div...do%>
<%# конкретная кнопка теперь будет скрывать или показывать конкретный блок div %>
<%= link_to t('questions.show.comments'), "##{html_id}",
  class: 'btn btn-primary', data: {'bs-toggle': 'collapse'} %>
<%# если комментария нет, то всхлопнутое остается %>
  <%= tag.div class: "collapse #{'show' if is_current_comment}", id: html_id do %>
  <%# форму отстраиваем для двух моделей: commentable - в качестве которой может фигурировать
  вопрос или ответ, а дальше если комментарий существует - отсраивать форму для "comment", а
  если его нет - создаем новый образец класса comments, который будет привязан к commentable  %>
    <%= form_with model: [commentable,
    (is_current_comment ? comment : commentable.comments.build)],
  class: 'pt-3 border-top my-2' do |f| %>
      <% if is_current_comment %>
    <%= render 'shared/errors', object: comment %>
    <% end %>

      <div class="mb-3 row"> <div class="col-sm-2 col-form-label">
        <%= f.label :body %>
      </div>

      <div class="col-sm-10">
        <%= f.text_area :body, class: 'form-control form-control-sm' %>
      </div>
    </div>

    <%= f.submit t('global.button.submit'), class: 'btn btn-sm btn-primary' %>
  <% end %>
  <%# вывод всех задекорированных комментариев %>
  <%= render commentable.comments.includes(:user).decorate %>
<% end %>